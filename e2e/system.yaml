init:
  s3Secrets: ${secrets.$awsCredentials}
  gcpSecrets:  ${secrets.$gcpCredentials}

  mirrorGSConfig: $Cat(config/gs.json)
  mirrorGSConfigJSON: $AsJSON($mirrorGSConfig)

  mirrorS3Config: $Cat(config/s3.json)
  mirrorS3ConfigJSON: $AsJSON($mirrorS3Config)


pipeline:

  uploadMirrorGSConfig:
    action: storage:upload
    sourceKey: mirrorGSConfigJSON
    dest:
      credentials: $gcpCredentials
      URL: gs://${gsBucket}/e2e-mirror/config/mirror.json

  uploadMirrorS3Config:
    action: storage:upload
    sourceKey: mirrorS3ConfigJSON
    dest:
      credentials: $awsCredentials
      URL: s3://${s3Bucket}/e2e-mirror/config/mirror.json

  setupMessageBus:
    action: msg:setupResource
    resources:
      - URL: smirrorTopic
        type: topic
        vendor: gcp
        credentials: $gcpCredentials

      - URL: smirrorSubscription
        type: subscription
        vendor: gcp
        credentials: $gcpCredentials
        config:
          topic:
            URL: /projects/${gcp.projectID}/topics/smirrorTopic

  s3Secret:
    deployGCPKey:
      action: gcp/kms:deployKey
      credentials: $gcpCredentials
      ring: gs_mirror_ring
      key: gs_mirror_key
      purpose: ENCRYPT_DECRYPT
      logging: false
      bindings:
        - role: roles/cloudkms.cryptoKeyEncrypterDecrypter
          members:
            - serviceAccount:${gcp.serviceAccount}

    encryptS3Credentials:
      action: gcp/kms:encrypt
      ring: gs_mirror_ring
      key: gs_mirror_key
      plainData: $AsJSON($s3Secrets)
      dest:
        URL: gs://${gsBucket}/e2e-mirror/secret/s3-mirror.json.enc
        credentials: ${gcpCredentials}
      logging: false

  gsSecret:
    deployS3Key:
     credentials: $awsCredentials
     action: aws/kms:setupKey
     aliasName: alias/smirror

    deployGSSecret:
     action: aws/ssm:setParameter
     name: smirror.gs
     '@description': Google Storage credentials
     type: SecureString
     keyId: alias/dstransfer
     value: $gcpSecrets.Data



  info:
   action: print
   message: 'encrypted s3 credentials: ${encryptS3Credentials.CipherBase64Text}'
