init:
  '!gcpCredentials': $params.authWith
  '!awsCredentials': $params.awsCredentials
  gcp: ${secrets.$gcpCredentials}
  gcpProject: $gcp.ProjectID
  destPrefix: $Replace('$gcp.ProjectID','_','-')
  prefix: $Replace('$gcp.ProjectID','-','_')
  configBucket: ${prefix}_config
  triggerBucket: ${prefix}_trigger
  opsBucket: ${prefix}_operation
  destBucket: ${destPrefix}-mirrored


pipeline:
  setupRule:
    action: storage:copy
    expand: true
    source:
      URL: rule.yaml
    dest:
      credentials: $gcpCredentials
      URL: gs://${configBucket}/StorageMirror/Rules/test-rule.yaml

  cleanupDest:
    action: storage:remove
    assets:
      - URL: s3://${destBucket}/testdata/s3/test/events.csv.gz
        credentials: $awsCredentials

  checkDest:
    action: storage:exists
    assets:
      - URL: s3://${destBucket}/testdata/s3/test/events.csv.gz
        credentials: $gcpCredentials

  trigger:
    action: storage:copy
    sleepTimeMs: 25000
    source:
      URL: events.csv.gz
    dest:
      credentials: $gcpCredentials
      URL: gs://${triggerBucket}/testdata/s3/test/events.csv.gz

  validate:
    action: storage:exists
    assets:
      - URL: s3://${destBucket}/testdata/s3/test/events.csv.gz
        credentials: $gcpCredentials
    expect:
      's3://${destBucket}/testdata/s3/test/events.csv.gz': true