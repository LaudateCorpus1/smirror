init:

  '!awsCredentials': $params.authWith
  handler: smirrorsns
  appPath: /tmp/${handler}
  appLocation: ${appPath}/aws/sns/${handler}.zip
  functionName: StorageMirrorSns
  privilegePolicy: privilege-policy.json

  bucketPrefix: ms-dataflow
  triggerBucket: ${bucketPrefix}-sns-trigger
  topic: ${bucketPrefix}StorageMirrorTopic

pipeline:
  setup:
    action: msg:setupResource
    credentials: $awsCredentials
    resources:
      - URL: $topic
        type: topic
        vendor: aws

  deploy:
    checkOut:
      action: vc/git:checkout
      Origin:
        URL: https://github.com/viant/smirror.git
      Dest:
        URL: ${appPath}

    package:
      action: exec:run
      target: $target
      checkError: true
      commands:
        - cd ${appPath}
        - unset GOPATH
        - export GO111MODULE=on
        - export GOOS=linux
        - export GOARCH=amd64
        - go mod vendor
        - cd aws/sns
        - go build -o ${handler}
        - zip -j ${handler}.zip ${handler}

    deployLambda:
      action: aws/lambda:deploy
      credentials: $awsCredentials
      functionname: $functionName
      runtime:  go1.x
      handler: ${handler}
      timeout: 360
      environment:
        variables:
          DEST: StorageMirror
      code:
        zipfile: $LoadBinary(${appLocation})
      rolename: lambda-${functionName}-executor
      define:
        - policyname: lambda-${functionName}-role
          policydocument: $Cat('${privilegePolicy}')
      attach:
        - policyarn: arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole


    setupSubscription:
      action: aws/sns:setupSubscription
      protocol: lambda
      endpoint: $functionName
      topic: $topic



  setupSnsBucket:
    action: storage:create
    isDir: true
    dest:
      credentials: $awsCredentials
      URL: s3://${triggerBucket}/


  setBucketTopicNotification:
    action: aws/s3:setupBucketNotification
    credentials: $awsCredentials
    bucket: ${triggerBucket}
    topicConfigurations:
      - topic: $topic
        id: ObjectCreatedEvents
        events:
          - s3:ObjectCreated:*
